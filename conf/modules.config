/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: "${params.publish_dir_mode}",
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: SRATOOLS_PREFETCH {
        publishDir = [
            path: { "${params.outdir}/sra" },
            enabled: false
        ]
    }
    withName: SRATOOLS_FASTERQDUMP {
        publishDir = [
            [
            path: { "${params.outdir}/fastq" },
            mode: 'copy',
            pattern: "*gz"
            ],
            [
            path: { "${params.outdir}/fastq/md5" },
            mode: 'copy',
            pattern: "*.md5"
            ]
        ]
    }
    withName: 'FASTQC' {
        ext.args         = '--quiet'
        ext.when         = {  }
        ext.prefix       = { "${meta.id}.raw" }
        publishDir       = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/fastqc/${meta.id}" },
            pattern: "*",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'SEQKIT_PAIR' {
        ext.args         = { "" }
        ext.when         = {  }
        publishDir       = [
            enabled: "${params.save_debug}",
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/seqkit_pair/${meta.id}" },
            pattern: "*.fastq.gz"
        ]
    }
    withName: 'FAQCS' {
        ext.args         = { "--debug" }
        ext.when         = {  }
        publishDir       = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/faqcs/${meta.id}" },
            pattern: "*.{fastq.gz,txt,pdf}"
        ]
    }
    withName: 'QC_REPORT' {
        ext.args         = { "" }
        ext.when         = {  }
        publishDir       = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/qc/qc_report/${meta.id}" },
            pattern: "*.{txt}"
        ]
    }
    withName: 'QC_REPORTSHEET' {
        ext.when         = {  }
        publishDir       = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/qc/qc_report" },
            pattern: "*",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'NCBI_SRA_HUMAN_SCRUBBER' {
        ext.args         = { "" }
        ext.when         = {  }
        publishDir       = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/ncbi_sra_human_read_scrubber/${meta.id}" },
            pattern: "*.{fastq.gz,TOTAL_SPOTS_REMOVED.txt}"
        ]
    }
    withName: 'IRMA' {
        ext.args         = { "" }
        ext.when         = {  }
        publishDir       = [
            [
                mode: "${params.publish_dir_mode}",
                path: { "${params.outdir}/irma"}
            ],
            [
                enabled: true,
                mode: "${params.publish_dir_mode}",
                path: { "${params.outdir}/irma/${meta.id}" },
                pattern: "*.{fasta,txt}"
            ]
        ]
    }
    withName: ADAPTERREMOVAL {
        ext.args   = [
            // collapsing options
            params.shortread_qc_mergepairs ? "--collapse" : "",
            // trimming options
            params.shortread_qc_skipadaptertrim ? "--adapter1 ''" : params.shortread_qc_adapterlist ? "" : params.shortread_qc_adapter1 ? "--adapter1 ${params.shortread_qc_adapter1}" : "", // adding adapter list happens at module input channel level
            params.shortread_qc_skipadaptertrim ? "--adapter2 ''" : params.shortread_qc_adapterlist ? "" : params.shortread_qc_adapter2 ? "--adapter2 ${params.shortread_qc_adapter2}" : "",
            // filtering options
            "--minlength ${params.shortread_qc_minlength}"
        ].join(' ').trim()
        ext.prefix = { "${meta.id}_${meta.run_accession}" }
        publishDir = [
            [
                enabled: true,
                mode: "${params.publish_dir_mode}",
                path: { "${params.outdir}/adapterremoval/${meta.id}" },
                pattern: '*.fastq.gz'
            ],
            [
                path: { "${params.outdir}/adapterremoval/${meta.id}" },
                mode: "${params.publish_dir_mode}",
                pattern: '*.settings'
            ]
        ]
    }
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
}
